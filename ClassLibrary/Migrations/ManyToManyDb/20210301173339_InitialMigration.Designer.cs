// <auto-generated />
using System;
using ClassLibrary.ManyToManyPractice;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClassLibrary.Migrations.ManyToManyDb
{
    [DbContext(typeof(ManyToManyDbContext))]
    [Migration("20210301173339_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AuthorModelTrackModel", b =>
                {
                    b.Property<Guid>("AuthorModelsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrackModelsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AuthorModelsId", "TrackModelsId");

                    b.HasIndex("TrackModelsId");

                    b.ToTable("AuthorModelTrackModel");
                });

            modelBuilder.Entity("ClassLibrary.ManyToManyPractice.AuthorModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuthorModels");
                });

            modelBuilder.Entity("ClassLibrary.ManyToManyPractice.TrackModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrackModels");
                });

            modelBuilder.Entity("AuthorModelTrackModel", b =>
                {
                    b.HasOne("ClassLibrary.ManyToManyPractice.AuthorModel", null)
                        .WithMany()
                        .HasForeignKey("AuthorModelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassLibrary.ManyToManyPractice.TrackModel", null)
                        .WithMany()
                        .HasForeignKey("TrackModelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
